using System;

interface IA35
{
    void AMethod();
}

class A35 : IA35
{
    public void AMethod()
    {
        Console.WriteLine("AMethod...");

        // comment out code generated by VS
        //throw new NotImplementedException();
    }
}

interface IB35
{
    void BMethod();
}

class B35 : IB35
{
    public void BMethod()
    {
        Console.WriteLine("BMethod...");

        // comment out code generated by VS
        //throw new NotImplementedException();
    }
}

// implement multiple inheritence with class AB by inheriting from multiple interfaces (not classes)
class AB35 : IA35, IB35
{
    // these classes already provide implementations for the interface members defined below
    A35 a35 = new A35();
    B35 b35 = new B35();

    // class AB needs to define all interface member definitions from IA35 and IB35
    // however, we dont need to manually implement those interface members again in this class
    // instead, we can make use of classes that already provide those implementations
    public void AMethod()
    {
        a35.AMethod();
    }

    public void BMethod()
    {
        b35.BMethod();
    }
}

class Program35
{
    static void Main()
    {
        AB35 ab35 = new AB35();
        ab35.AMethod();
        ab35.BMethod();
    }
}

